[{"content":"J\u0026rsquo;ai commencé chez Playwing en mars 2022 en tant que stagiaire, ce qui m\u0026rsquo;a ensuite permis d\u0026rsquo;être employé à temps plein jusqu\u0026rsquo;en janvier 2024. J\u0026rsquo;étais game designer, mais comme nous étions une petite équipe, j\u0026rsquo;ai eu de nombreuses responsabilités tout au long de cette période. Voici quelques features dont j\u0026rsquo;ai eu la responsabilité.\nMode de jeu majeur : Outbreak Outbreak a été présenté pour la première fois dans l\u0026rsquo;événement The Last Bastion. C\u0026rsquo;est le premier mode de jeu PvE de Century : Age of Ashes. Vous jouez en coopération dans une équipe de quatre dragonniers qui doivent détruire des hordes de \u0026ldquo;Dwellers from the shadow\u0026rdquo; (habitants de l\u0026rsquo;ombre), avant qu\u0026rsquo;ils ne franchissent la barrière Valkürienne, ce qui pourrait entraîner la chute de toutes les civilisations de Skeld.\nÀ chaque tour, vous gagnez de l\u0026rsquo;or que vous pouvez dépenser au début du tour suivant pour acheter des améliorations pour votre dragon. Il peut s\u0026rsquo;agir d\u0026rsquo;attaques plus puissantes, de tirs plus rapides ou de temps de recharge plus courts. Vous rencontrerez de plus en plus d\u0026rsquo;ennemis au fur et à mesure que vous avancerez, ainsi que de nouveaux types d\u0026rsquo;ennemis. Si vous parvenez à contenir les 10 vagues d\u0026rsquo;ennemis, vous remportez la bataille. Le mode de jeu est disponible en quatre niveaux de difficulté.\nBande-annonce Gameplay Mon rôle On m\u0026rsquo;a confié la responsabilité de la conception de base qui, après validation, est passée à un prototype sur lequel j\u0026rsquo;ai travaillé pendant plusieurs semaines. Une fois le prototype validé, une équipe de programmeurs est venue peaufiner les fonctionnalités et retravailler ce qui devait l\u0026rsquo;être. J\u0026rsquo;ai eu beaucoup de plaisir à travailler avec des personnes plus expérimentées et à échanger des idées sur les systèmes de jeu. J\u0026rsquo;ai découvert que mes propositions n\u0026rsquo;étaient pas si mauvaises et que j\u0026rsquo;étais capable de communiquer et de gérer une petite équipe. J\u0026rsquo;ai également travaillé en étroite collaboration avec notre artiste UI afin d\u0026rsquo;améliorer l\u0026rsquo;expérience utilisateur.\nPersonnage : Le Givresang Chaque nouvelle saison de Century s\u0026rsquo;accompagne d\u0026rsquo;un nouveau personnage. Pour celui-ci, nous n\u0026rsquo;avions que quatre mois. J\u0026rsquo;ai été le principal designer de ce personnage et de ses pouvoirs. Le concept était celui d\u0026rsquo;une classe de soutien qui harcèle ; qui soigne les alliés et affaiblit les ennemis, tout comme Zenyatta d\u0026rsquo;Overwatch. J\u0026rsquo;ai travaillé en étroite collaboration avec notre programmeur gameplay ainsi qu\u0026rsquo;avec les artistes pour concevoir les contrôles et la caméra des pouvoirs. C\u0026rsquo;était un travail méticuleux de coordination entre tous les membres de l\u0026rsquo;équipe afin d\u0026rsquo;obtenir le résultat que nous voulions. La première capacité, appelée \u0026ldquo;Charge sauvage\u0026rdquo;, a eu besoin de beaucoup d\u0026rsquo;itération, car c\u0026rsquo;était la première fois dans Century qu\u0026rsquo;il y avait une attaque de mêlée.\nMode de jeu principal : Artifact J\u0026rsquo;ai été chargé de trouver un nouveau concept de mode de jeu, qui rejoindrait la rotation des modes de jeux principaux. L\u0026rsquo;objectif était d\u0026rsquo;adapter le mode \u0026ldquo;Recherche et destruction\u0026rdquo;, classique de jeux tels que Counter Strike ou Valorant, mais avec le gameplay de Century, ce qui est vraiment délicat. Dans Century, votre dragon se déplace constamment, vous ne pouvez pas vous cacher, vous ne pouvez pas prendre position et vous ne pouvez pas vous arrêter. L\u0026rsquo;adaptation a donc été difficile mais très amusante. Il s\u0026rsquo;agit également du tout premier mode de jeu asymétrique de Century.\nUne fois le concept du jeu terminé, une autre équipe s\u0026rsquo;est chargée de l\u0026rsquo;implémentation proprement dite, et un collègue designer a pris le relai.\nModes de jeu mineurs Dans le cadre d\u0026rsquo;une mise à jour liveops, j\u0026rsquo;ai designé de nombreux concepts de modes de jeu, parmi lesquels deux ont été choisis pour être développés dans le cadre de l\u0026rsquo;événement Colosseum : de petits twists sur des modes de jeu existants qui renouvelleraient l\u0026rsquo;intérêt des joueurs pour le jeu et fourniraient plus de contenu pour les événements à venir.\nRégicide : Dans chaque équipe, un joueur est désigné comme le \u0026ldquo;roi\u0026rdquo;. L\u0026rsquo;équipe gagne des points en tuant le roi. Si un roi est tué, un autre joueur de l\u0026rsquo;équipe devient roi. Si le roi survit assez longtemps, il fait gagner des points à son équipe et passe le rôle de roi à quelqu\u0026rsquo;un d\u0026rsquo;autre.\nSaccage : Une variante du mode de jeu classique Pillage de Century. Vous tuez des dragons porteurs d\u0026rsquo;or et devez ramener l\u0026rsquo;or dans le coffre de votre équipe. Mais cette fois, l\u0026rsquo;or est limité et les joueurs ont la possibilité de voler dans le coffre de l\u0026rsquo;ennemi.\nNouveaux pouvoirs Dans le cadre d\u0026rsquo;une mise à jour de contenu, j\u0026rsquo;ai travaillé sur quatre nouvelles capacités pour les quatre personnages du jeu (à l\u0026rsquo;époque). C\u0026rsquo;était la première fois que les personnages pouvaient choisir entre plus de deux capacités dans Century. Ces capacités étaient destinées à être vendues avec de la soft currency, ce qui permettrait aux joueurs d\u0026rsquo;avoir une forme de progression. L\u0026rsquo;équilibrage a été particulièrement difficile, car les capacités ne devaient pas donner un avantage injuste aux joueurs.\n","date":"2024-01-25T01:36:21+01:00","image":"https://clemorl.fr/fr/post/century/banner_hufd7daa78f73a0ea9a2b095306d3c61af_428433_120x120_fill_q75_box_smart1.jpg","permalink":"https://clemorl.fr/fr/post/century/","title":"Century Age of Ashes"},{"content":"Divunity est une expérience unique, et honnêtement, l\u0026rsquo;un des projets dont je suis le plus fier. C\u0026rsquo;est un \u0026ldquo;god game\u0026rdquo; en VR dans lequel deux joueurs doivent coopérer pour faire cohabiter leurs peuples ensemble malgré la haine qu\u0026rsquo;ils éprouvent l\u0026rsquo;un pour l\u0026rsquo;autre. L\u0026rsquo;accent est mis à la fois sur l\u0026rsquo;aspect communication/stratégie et sur le plaisir de jouer avec un jouet VR.\nRésumé Cette vidéo présente les mécaniques du jeu, et montre un playthrough.\nDu concept à la livraison J\u0026rsquo;ai eu la chance de présenter cette idée devant mes collègues de promo, et qu\u0026rsquo;elle soit sélectionnée parmi les 12 projets que nous allions créer.\nTout a commencé par une vision claire que quelques collègues et moi-même avons eue en 2019. De là est né un concept de jeu brut que j\u0026rsquo;ai réalisé pour présenter les concepts clés. À partir de là, une équipe de quatre personnes et moi-même avons développé une démo en l\u0026rsquo;espace de trois mois, qui comprend du réseau et de la physique.\nNous avons ensuite présenté ce jeu au public, et ce grand nombre de nouveaux joueurs a mis en lumière certaines lacunes du design et d\u0026rsquo;autres problèmes d\u0026rsquo;expérience utilisateur. La VR n\u0026rsquo;est pas une mince affaire ! Si ce jeu devenait un jeu à part entière, nous aurions beaucoup de contenu et d\u0026rsquo;améliorations à apporter. Nous avons beaucoup appris et nous nous sommes beaucoup amusés.\n*Mes rôles sur le projet :\nGame designer Programmeur gameplay Team leader Fait avec soin par Credit Role Pierre Aceituno Producer Solène Pobelle Character \u0026amp; environment artist Noé Simon UX Designer, User Researcher Pamphile Saltel Programmeur L\u0026rsquo;idée originale a été imaginée et testée par Marie Abrino, Sohel Bourgeau, Hippolyte Follenfant, Morgan Geniez et moi-même.\nGallerie Histoire d\u0026rsquo;une feature : Le système de demandes J\u0026rsquo;ai conçu, prototypé et intégré ce système de jeu du début à la fin. Au cours du jeu, votre peuple vous demandera de construire de nouveaux bâtiments. C\u0026rsquo;est la fonctionnalité sur laquelle j\u0026rsquo;ai le plus travaillé, car elle comprend des éléments de systems design, de technical design, et de narrative design.\nDans la première itération, les demandes étaient rudimentaires, elles indiquaient simplement un type de bâtiment et une action : construire ou détruire. Cela n\u0026rsquo;offrait pas beaucoup de variété, on s\u0026rsquo;ennuyait. De plus, les joueurs ne comprenaient pas vraiment le but du jeu, ni l\u0026rsquo;impact de leurs actions sur leur peuple.\nNous avons donc remanié le système pour inclure une phrase complète sur ce que le peuple vous demandait de faire, avec un indice de craft au verso. Cela a permis de renforcer l\u0026rsquo;ambiguïté et la possibilité de choix du joueur. Par exemple, si votre peuple dit \u0026ldquo;Nous avons peur des autres, faites quelque chose\u0026rdquo;, vous avez deux options :\nConstruire une tour de garde pour qu\u0026rsquo;ils se sentent en sécurité Demander à votre coéquipier de détruire sa tour de garde, afin que votre peuple ne se sente pas menacé. Cela a ouvert la porte à des demandes beaucoup plus variées et a rendu les enjeux beaucoup plus clairs pour les joueurs.\nLes demandes sont générées de manière procédurale en fonction de l\u0026rsquo;état du jeu, comme le score de chaque joueur ou les bâtiments présents. La plupart des bâtiments de fin de partie (lorsque les deux tribus s\u0026rsquo;apprécient davantage) vous obligent à utiliser les ressources de votre partenaire, ce qui renforce la coopération à la fois dans la narration et dans le gameplay.\nLe jeu se termine par la construction d\u0026rsquo;une \u0026ldquo;Merveille\u0026rdquo;, une statue en deux parties, chaque joueur devant construire sa propre partie.\n// Exemple de code d\u0026#39;une requête // Nous avons écrit des helpers pour évaluer l\u0026#39;état du jeu, par exemple // IsMilitary : Si le jeu est à l\u0026#39;ère militaire, c\u0026#39;est-à-dire si les deux peuples se détestent. new Request { text = Loc.GetString(\u0026#34;On déteste l\u0026#39;autre peuple, faites en sorte qu\u0026#39;on ne les voit plus\u0026#34;), // Quel bâtiment afficher sur la requête requestedBuilding = BuildingHelpers.GetBuilding(\u0026#34;Wall\u0026#34;, true), // Prédicat qui détermine quand la demande peut apparaître preCond = r =\u0026gt; IsMilitary, // Prédicat qui détermine si la demande a été satisfaite successCond = r =\u0026gt; BuildingHelpers.GetBuilding(\u0026#34;Wall\u0026#34;, true).JustBuilt(), } Le système de requêtes pourrait être élargi avec beaucoup plus de requêtes impliquant plus de types d\u0026rsquo;actions, plus de types de bâtiments etc. La forme actuelle des demandes laisse à désirer, car le texte peut être difficile à lire pour certains joueurs. Nous changerions probablement cette forme si nous pouvions continuer à travailler sur le jeu.\nDocumentation La documentation du jeu (document de conception du jeu) est disponible à la consultation.\n","date":"2024-01-24T19:43:55+01:00","image":"https://clemorl.fr/fr/post/divunity/thumbnail_huccc27de69e3f380447de251eaa0be0a2_882592_120x120_fill_box_smart1_3.png","permalink":"https://clemorl.fr/fr/post/divunity/","title":"Divunity"}]